@use '../escape' as *;
@use '../variables';
@use '../colors';
@use 'sass:list';
@use 'sass:map';

$artboard-sizes: (
    1: (
        x: 320px,
        y: 568px,
    ),
    2: (
        x: 375px,
        y: 667px,
    ),
    3: (
        x: 414px,
        y: 736px,
    ),
    4: (
        x: 375px,
        y: 812px,
    ),
    5: (
        x: 414px,
        y: 896px,
    ),
    6: (
        x: 320px,
        y: 1024px,
    ),
);

.dui-artboard {
    display: flex;
    flex: none;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    width: 320px;
    height: 568px;

    &.dui-artboard-demo {
        background-color: colors.get('base-100');
        color: colors.get-content('base');
        border-radius: variables.$box-border-radius;
        box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06);
    }

    @mixin responsive-props($prefix: '') {
        $prefix: escape($prefix);

        // dui-artboard-phone-1 md:dui-artboard-phone-2 md:dui-artboard-horizontal sm:dui-artboard-vertical
        // dui-artboard-phone-2

        &.#{$prefix}dui-artboard-phone {
            @each $size, $vector2 in $artboard-sizes {
                &-#{$size} {
                    &.dui-artboard-horizontal {
                        width: map.get($vector2, 'y');
                        height: map.get($vector2, 'x');
                    }

                    &.dui-artboard-vertical {
                        width: map.get($vector2, 'x');
                        height: map.get($vector2, 'y');
                    }
                }
            }
        }
    }

    @include responsive-props();

    @each $name, $screen-size in variables.$screen-sizes {
        @media (min-width: #{$screen-size}) {
            @include responsive-props('#{$name}:');
        }
    }
}
