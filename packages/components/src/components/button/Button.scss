@use 'sass:list';
@use '../variables.scss' as *;

.btn {
    @apply inline-flex flex-shrink-0 cursor-pointer select-none flex-wrap items-center justify-center border-transparent text-center transition duration-200 ease-in-out;
    @apply h-12 px-4 text-sm;
    @apply border-neutral bg-neutral text-neutral-content;
    @apply font-semibold uppercase no-underline;
    border-width: var(---button-border-width, 1px);
    animation: button-pop var(--button-animation-duration, 0.25s) ease-out;
    text-transform: var(--button-text-transform, uppercase);
    border-radius: var(--button-border-radius);
    min-height: 3rem;
    line-height: 1em;

    @mixin btn-props($prefix: '') {
    }

    &.btn-no-animation {
        --button-animation-duration: 0;
        --button-focus-scale: 1;
    }

    &.btn-active:hover,
    &.btn-active:focus {
        animation: none;
    }

    &.btn-active:hover,
    &.btn-active:focus {
        transform: scale(var(--button-focus-scale, 0.95));
    }

    &:hover,
    &.btn-active {
        @apply border-neutral-focus bg-neutral-focus;
    }

    &:focus-visible {
        outline: 2px solid hsl(var(--neutral-focus));
        outline-offset: 2px;
    }

    @each $color in list.join($brand-colors, $functional-colors) {
        &.btn-#{$color} {
            @apply border-#{$color} bg-#{$color} text-#{$color}-content;

            &:hover,
            &.btn-active {
                @apply border-#{$color}-focus bg-#{$color}-focus;
            }

            &:focus-visible {
                outline: 2px solid hsl(var(--#{$color}));
            }
        }
    }

    &.btn-ghost {
        @apply border border-transparent bg-transparent text-current;
        &:hover,
        &.btn-active {
            @apply border-opacity-0 bg-base-content bg-opacity-20;
        }
        &:focus-visible {
            outline: 2px solid 0 0 2px currentColor;
        }
    }

    &.btn-link {
        @apply border-transparent bg-transparent text-primary;
        &:hover,
        &.btn-active {
            @apply border-transparent bg-transparent underline;
        }
        &:focus-visible {
            outline: 2px solid 0 0 2px currentColor;
        }
    }

    &.btn-outline {
        @apply border-current bg-transparent text-base-content;

        &:hover {
            @apply border-base-content bg-base-content text-base-100;
        }

        @each $color in list.join($brand-colors, $functional-colors) {
            &.btn-#{$color} {
                @apply text-#{$color};

                &:hover {
                    @apply border-#{$color}-focus bg-#{$color}-focus text-#{$color}-content;
                }
            }
        }
    }

    &:disabled,
    &:disabled:hover {
        @apply border-opacity-0 bg-neutral bg-opacity-20 text-base-content text-opacity-20;
    }

    &.btn-loading {
        &.btn-square:before,
        &.btn-circle:before {
            @apply mr-0;
        }

        &.btn-xl:before,
        &.btn-lg:before {
            @apply h-5 w-5;
        }

        &.btn-sm:before,
        &.btn-xs:before {
            @apply h-3 w-3;
        }

        &,
        &:hover {
            @apply pointer-events-none;
        }

        &:before {
            @apply mr-2 h-4 w-4 rounded-full border-2;
            animation: spin 2s linear infinite;
            content: '';
            border-top-color: transparent;
            border-left-color: transparent;
            border-bottom-color: currentColor;
            border-right-color: currentColor;
        }

        @media (prefers-reduced-motion: reduce) {
            &:before {
                animation: spin 10s linear infinite;
            }
        }
    }

    &:disabled {
        @apply pointer-events-none;
    }

    &.btn-xs {
        @apply h-6 px-2;
        min-height: 1.5rem;
        font-size: 0.75rem;
    }

    &.btn-sm {
        @apply h-8 px-3;
        min-height: 2rem;
        font-size: 0.875rem;
    }

    &.btn-md {
        @apply h-12 px-4;
        min-height: 3rem;
        font-size: 0.875rem;
    }

    &.btn-lg {
        @apply h-16 px-6;
        min-height: 4rem;
        font-size: 1.125rem;
    }

    &.btn-wide {
        @apply w-64;
    }

    &.btn-block {
        @apply w-full;
    }

    &.btn-square {
        @apply h-12 w-12 p-0;

        &.btn-xs {
            @apply h-6 w-6/12;
        }

        &.btn-sm {
            @apply h-8 w-28;
        }

        &.btn-md {
            @apply h-12 w-12;
        }

        &.btn-lg {
            @apply h-16 w-16;
        }
    }

    &.btn-circle {
        @apply h-12 w-12 rounded-full p-0;

        &.btn-xs {
            @apply h-6 w-6;
        }

        &.btn-sm {
            @apply h-8 w-8;
        }

        &.btn-md {
            @apply h-12 w-12;
        }

        &.btn-lg {
            @apply h-16 w-16;
        }
    }
}

@keyframes button-pop {
    0% {
        transform: scale(var(--button-focus-scale, 0.95));
    }
    40% {
        transform: scale(1.02);
    }
    100% {
        transform: scale(1);
    }
}

@keyframes spin {
    from {
        transform: rotate(0deg);
    }
    to {
        transform: rotate(360deg);
    }
}
